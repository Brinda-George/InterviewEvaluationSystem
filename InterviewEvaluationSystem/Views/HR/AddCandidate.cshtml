@model DataAccessLayer.InterviewViewModels.CandidateViewModel

@{
    ViewBag.Title = "AddCandidate";
    var grid = new WebGrid(Model.users, canPage: true, rowsPerPage: 10, canSort: true, fieldNamePrefix: "f1", pageFieldName: "p1");
    var gridCandidate = new WebGrid(source: Model.CandidatesList, canPage: true, rowsPerPage: 10, canSort: true, fieldNamePrefix: "f2", pageFieldName: "p2");
}

<link href="~/Content/addcandidate.css" rel="stylesheet" />
<script src="~/Scripts/SearchCandidate.js"></script>
<script src="~/Scripts/Candidate.js"></script>

<ol class="breadcrumb">
    <li class="breadcrumb-item">
        <a href="~/HR/HRHomePage">Home Page</a>
    </li>
    <li class="breadcrumb-item active">Interviews</li>
    <li class="breadcrumb-item active">Candidates</li>
</ol>

<form id="frmCreate">
    @Html.AntiForgeryToken()
    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Candidate Name", id = "Name" } })
                <label id="lblCandidateName" class="text-danger"></label>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Designation, new { htmlAttributes = new { @class = "form-control", placeholder = "Post Applied For", id = "Designation" } })
                <label id="lblDesignation" class="text-danger"></label>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth, "Date Of Birth", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control", id = "DateOfBirth" } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                <label id="lblDOB" class="text-danger"></label>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfInterview, "Date Of Interview", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfInterview, new { htmlAttributes = new { @class = "form-control", id = "DateOfInterview" } })
                @Html.ValidationMessageFor(model => model.DateOfInterview, "", new { @class = "text-danger" })
                <label id="lblDOI" class="text-danger"></label>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Email", id = "Email" } })
                <label id="lblEmail" class="text-danger"></label>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PAN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PAN, new { htmlAttributes = new { @class = "form-control", placeholder = "PAN", id = "PAN" } })
                <label id="lblPAN" class="text-danger"></label>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpectedSalary, "Expected Salary", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpectedSalary, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExpectedSalary, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NoticePeriodInMonths, "Notice Period In Months", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NoticePeriodInMonths, new { htmlAttributes = new { @class = "form-control", @min = "0", placeholder = "Notice Period", id = "noticeperiod" } })
                <label id="lblNoticePeriod" class="text-danger"></label>
                @Html.ValidationMessageFor(model => model.NoticePeriodInMonths, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalExperience, "Total Experience", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalExperience, new { htmlAttributes = new { @class = "form-control", @min = "0", id = "totalexperience" } })
                @Html.ValidationMessageFor(model => model.TotalExperience, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PreviousCompany, "Previous Company", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input id="btnAddTextBox" type="button" value="Add Previous Company" onclick="AppendTextBox()" class="btn btn-default" /><br />
                <div id="divTextBoxes"></div>
                @Html.ValidationMessageFor(model => model.PreviousCompany, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Qualifications, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Qualifications, new { htmlAttributes = new { @class = "form-control", placeholder = "Qualification", id = "Qualifications" } })
                <label id="lblQualification" class="text-danger"></label>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Interviewer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("user", null, "--Select--", new { @class = "form-control", id = "ddlUser" })
                <label id="lblInterviewer" class="text-danger"></label>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" id="btnCreate" onclick="candidateValidation()" value="Add Candidate" class="btn btn-primary" />
            </div>
        </div>
    </div>
</form>

@if (Model.users.Any())
{
    @grid.GetHtml(tableStyle: "table table-bordered table-striped",
        headerStyle: "webgrid-header",
        alternatingRowStyle: "webgrid-alternating-row",
        rowStyle: "webgrid-row-style",
        mode: WebGridPagerModes.All,
        columns: grid.Columns(
            grid.Column("UserName", "User Name"),
            grid.Column("EmployeeId", "Employee Id"),
            grid.Column("Email", "Email"),
            grid.Column("Designation", "Designation"))
        )
}
else
{
    <div class="alert alert-success">
        <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>
        <strong>No Interviewers!!</strong>
    </div>
}

<div id="SearchCandidate">
    <table>
        <tr>
            <td><input type="text" class="form-control" id="CandidateNameText" placeholder="Search Candidate" /></td>
            <td><input type="button" id="searchCandidate" value="Search" class="btn btn-primary searchCandidate" /></td>
        </tr>
    </table>
</div>
<br />

<div id="gridContentCandidateResult"></div>

<div id="gridContent">
    @if (Model.CandidatesList.Any())
    {
        @gridCandidate.GetHtml(tableStyle: "table table-bordered",
        headerStyle: "webgrid-header",
        alternatingRowStyle: "webgrid-alternating-row",
        rowStyle: "webgrid-row-style",
        htmlAttributes: new { id = "WebGridCandidate" },
        mode: WebGridPagerModes.All,
        columns: gridCandidate.Columns(
            gridCandidate.Column("Name", "Candidate Name", format:
            @<text>
                <span class="display-modeCandidate">
                    <label id="lblCandidateName">@item.Name</label>
                </span>
                <input type="text" id="CandidateName" value="@item.Name" class="edit-modeCandidate form-control" />
                <div><label id="lblCandidateNameValidation" class="text-danger"></label></div>
            </text>),
            gridCandidate.Column("Email", "Email", format:
            @<text>
                <span class="display-modeCandidate">
                    <label id="lblEmail">@item.Email</label>
                </span>
                <input type="text" id="Email" value="@item.Email" class="edit-modeCandidate form-control" />
                <div><label id="lblEmailValidation" class="text-danger"></label></div>
            </text>),
            gridCandidate.Column("DateOfBirth", "Date Of Birth", format:
            @<text>
                <span class="display-modeCandidate">
                    <label id="lblDateOfBirth">@item.DateOfBirth.ToString("dd/MM/yyyy")</label>
                </span>
                <input type="date" id="DateOfBirth" class="edit-modeCandidate form-control" />
                <div><label id="lblDateOfBirthValidation" class="text-danger"></label></div>
            </text>),
            gridCandidate.Column("PAN", "PAN", format:
            @<text>
                <span class="display-modeCandidate">
                    <label id="lblPAN">@item.PAN</label>
                </span>
                <input type="text" id="PAN" value="@item.PAN" class="edit-modeCandidate form-control" />
                <div><label id="lblPANValidation" class="text-danger"></label></div>
            </text>),
            gridCandidate.Column("Designation", "Designation", format:
            @<text>
                <span class="display-modeCandidate">
                    <label id="lblDesignation">@item.Designation</label>
                </span>
                <input type="text" id="Designation" value="@item.Designation" class="edit-modeCandidate form-control" />
                <div><label id="lblDesignationValidation" class="text-danger"></label></div>
            </text>),
            gridCandidate.Column("DateOfInterview", "Date Of Interview", format:
            @<text>
                <span class="display-modeCandidate">
                    <label id="lblDateOfInterview">@item.DateOfInterview.ToString("dd/MM/yyyy")</label>
                </span>
                <input type="date" id="DateOfInterview" class="edit-modeCandidate form-control" />
                <div><label id="lblDateOfInterviewValidation" class="text-danger"></label></div>
            </text>),
            gridCandidate.Column("TotalExperience", "TotalExperience", format:
            @<text>
                <span class="display-modeCandidate">
                    <label id="lblTotalExperience">@item.TotalExperience</label>
                </span>
                <input type="text" id="TotalExperience" value="@item.TotalExperience" class="edit-modeCandidate form-control" />
                <div><label id="lblTotalExperienceValidation" class="text-danger"></label></div>
            </text>),
            gridCandidate.Column("Qualifications", "Qualifications", format:
            @<text>
                <span class="display-modeCandidate">
                    <label id="lblQualifications">@item.Qualifications</label>
                </span>
                <input type="text" id="Qualifications" value="@item.Qualifications" class="edit-modeCandidate form-control" />
                <div><label id="lblQualificationsValidation" class="text-danger"></label></div>
            </text>),
            gridCandidate.Column("Action", format: @<text>
                <button class="edit-userCandidate display-modeCandidate btn btn-default" id="@item.CandidateID"><i class="fa fa-pencil-square-o" aria-hidden="true"></i> Edit</button>
                <button class="save-userCandidate edit-modeCandidate btn btn-default" id="@item.CandidateID"><i class="fa fa-refresh" aria-hidden="true"></i> Update</button>
                <button class="cancel-userCandidate edit-modeCandidate btn btn-default" id="@item.CandidateID"><i class="fa fa-times" aria-hidden="true"></i> Cancel</button>
                <button class="delete-userCandidate btn btn-default" id="@item.CandidateID"><i class="fa fa-trash-o" aria-hidden="true"></i> Delete</button>
            </text>))
        )
    }
    else
    {
        <div class="alert alert-success">
            <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>
            <strong>No Candidates!!</strong>
        </div>
    }
</div>

<div>
    @Html.ActionLink("Back to Home", "HRHomePage", "HR")
</div>