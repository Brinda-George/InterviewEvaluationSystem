@model InterviewEvaluationSystem.Models.NotificationViewModel

@{
    ViewBag.Title = "Notification";
}

<script src="~/Scripts/Notification.js"></script>

<ol class="breadcrumb">
    <li class="breadcrumb-item">
        <a href="~/HR/HRHomePage">Home Page</a>
    </li>
    <li class="breadcrumb-item active">Notifications</li>
</ol>

@{
    var grid = new WebGrid(ViewBag.notificationList, canPage: true, rowsPerPage: 15, canSort: true);
}

<input type="hidden" id="notificationCount" value="@Session["NotificationsCount"]" />

@if (ViewBag.Success != null)
{
    <div class="alert alert-success">
        <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>
        <strong>ViewBag.Success</strong>
    </div>
}

@if (ViewBag.notificationList.Count == 0)
{
    <div class="alert alert-success">
        <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>
        <strong>You have No Notifications!! </strong>
    </div>
}
else
{
    @grid.GetHtml(tableStyle: "table table-bordered table-striped",
        headerStyle: "webgrid-header",
        alternatingRowStyle: "webgrid-alternating-row",
        rowStyle: "webgrid-row-style",
        mode: WebGridPagerModes.All,
        columns: grid.Columns(
            grid.Column("CandidateID", format:@<text><span><label id="lblCandidateID">@item.CandidateID</label></span></text>),
            grid.Column("Name", format:@<text><span><label id="lblCandidateName">@item.Name</label></span></text>),
            grid.Column("Email", format:@<text><span><label id="lblCandidateEmail">@item.Email</label></span></text>),
            grid.Column("RoundID", format:@<text><span><label id="lblCandidateRound">@item.RoundID</label></span></text>),
            grid.Column(columnName: "Recommended", header: "Status", format: (item) =>
            {
                if (item.Recommended == true && item.RoundID < item.totalRound)
                {
                    var buttons = "<input type='button' value='Proceed To Next Round' class='ProceedNext btn btn-default' />  " +
                            "<input type='button' value='Reject The Candidate' class='RejectCandidate btn btn-default' />";
                    return Html.Raw(buttons);
                }
                else if (item.Recommended == true && item.RoundID == item.totalRound)
                {

                    return new HtmlString("<input type='button' value='Hire The Candidate' class='HireCandidate btn btn-default' />");
                }
                else
                {
                    return new HtmlString("<input type='button' value='Reject The Candidate' class='RejectCandidate btn btn-default' />");
                }
            }))
            )

    <div id="ProceedCandidateDiv"></div>
}

<div>
    @Html.ActionLink("Back to Home", "HRHomePage", "HR")
</div>