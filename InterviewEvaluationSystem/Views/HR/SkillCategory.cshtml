@model InterviewEvaluationSystem.Models.tblSkillCategory

@{
    ViewBag.Title = "SkillCategory";
}

<link href="~/Content/formstyle.css" rel="stylesheet" />
<h2>SkillCategory</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div ID="form1" class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.SkillCategory, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SkillCategory, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SkillCategory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div id="ajaxgrid">
    @{
        var gridview = new WebGrid(ViewBag.Roles, ajaxUpdateContainerId: "ajaxgrid", rowsPerPage: 5);
    }

    @gridview.GetHtml(tableStyle: "webgrid-table",
        headerStyle: "webgrid-header",
        footerStyle: "webgrid-footer",
        selectedRowStyle: "webgrid-selected-row",
        rowStyle: "webgrid-row-style",
        mode: WebGridPagerModes.All,
        columns: new[]{
            gridview.Column("SkillCategory", format:
            @<text>
                <span id="skillcategory" class="read">@item.SkillCategory</span>
                @Html.TextBox("SkillCategory", (string)item.SkillCategory, new { @class = "edit",@style="display:none" })
            </text>),
            gridview.Column("Description", format:
            @<text>
                <span id="description" class="read">@item.Description</span>
                @Html.TextBox("Description", (string)item.Description, new { @class = "edit",@style="display:none" })
            </text>),
            gridview.Column("Action", style: "button", format:
            @<text>
                <button class="edit-case read" id="@item.SkillCategoryID">Edit</button>
                <button class="delete-case read" id="@item.SkillCategoryID">Delete</button>
                <button class="update-case edit" style="display:none" id="@item.SkillCategoryID">Update</button>
                <button class="cancel-case edit" style="display:none" id="@item.SkillCategoryID">Cancel</button>
            </text>)
    }
)
</div>

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")
<script src="~/Scripts/Scategory.js"></script>