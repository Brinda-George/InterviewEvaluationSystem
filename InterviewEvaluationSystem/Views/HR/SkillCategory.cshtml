@model InterviewEvaluationSystem.Models.SkillCategoryViewModel

@{
    ViewBag.Title = "SkillCategory";
}

<script src="~/Scripts/Scategory.js"></script>

<ol class="breadcrumb">
    <li class="breadcrumb-item">
        <a href="~/HR/HRHomePage">Home Page</a>
    </li>
    <li class="breadcrumb-item active">Skill Categories</li>
</ol>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div ID="form1" class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.SkillCategory, "Skill Category", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SkillCategory, new { htmlAttributes = new { @class = "form-control", @placeholder = "Skill Category" } })
                @Html.ValidationMessageFor(model => model.SkillCategory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @placeholder = "Description" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add Skill Category" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div id="ajaxgrid">
    @{
        var gridview = new WebGrid(ViewBag.Roles, ajaxUpdateContainerId: "ajaxgrid", rowsPerPage: 5);
    }
    @if (ViewBag.Roles.Count != 0)
    {
        @gridview.GetHtml(tableStyle: "table table-bordered table-striped",
                 headerStyle: "webgrid-header",
                 alternatingRowStyle: "webgrid-alternating-row",
                 rowStyle: "webgrid-row-style",
                 mode: WebGridPagerModes.All,
                 columns: new[]{
                 gridview.Column("SkillCategory", format:
                @<text>
                    <span id="skillcategory" class="read">@item.SkillCategory</span>
                    @Html.TextBox("SkillCategory", (string)item.SkillCategory, new { @class = "edit",@style="display:none"  })
                    <label class="text-danger" id="catLbl"></label>
                </text>),
                gridview.Column("Description", format:
                @<text>
                    <span id="description" class="read">@item.Description</span>
                    @Html.TextBox("Description", (string)item.Description, new { @class = "edit",@style="display:none"  })
                    <label class="text-danger" id="desLbl"></label>
                </text>),
                gridview.Column("Action", style: "button", format:
                @<text>
                    <button class="edit-case read btn btn-default" id="@item.SkillCategoryID"><i class="fa fa-pencil-square-o" aria-hidden="true"></i> Edit</button>
                    <button class="delete-case read btn btn-default" id="@item.SkillCategoryID"><i class="fa fa-trash-o" aria-hidden="true"></i> Delete</button>
                    <button class="update-case edit btn btn-default" style="display:none" id="@item.SkillCategoryID"><i class="fa fa-refresh" aria-hidden="true"></i> Update</button>
                    <button class="cancel-case edit btn btn-default" style="display:none" id="@item.SkillCategoryID"><i class="fa fa-times" aria-hidden="true"></i> Cancel</button>
                </text>)
                })
    }
</div>

<div>
    @Html.ActionLink("Back to Home", "HRHomePage", "HR")
</div>