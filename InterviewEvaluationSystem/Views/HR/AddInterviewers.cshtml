@model InterviewEvaluationSystem.Models.UserViewModel
@{
    var grid = new WebGrid(ViewBag.Users, canPage: true, rowsPerPage: 5, canSort: true);
  //  var grid = new WebGrid(ViewBag.Users, canPage: true, rowsPerPage: 15, canSort: true, fieldNamePrefix: "f1", pageFieldName: "p1");
    int rowVal = 0;
}
@{
    ViewBag.Title = "AddInterviewers";
}

<script src="~/Scripts/Interviewer.js"></script>
<link href="~/Content/webgridstyle.css" rel="stylesheet" />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <br /><br />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.UserName, "User Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10"> 
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", placeholder = "User Name" } })
                <div class="text-danger">@ViewBag.UserNameErrorMessage</div>
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeId, "Employee Id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmployeeId, new { htmlAttributes = new { @class = "form-control", placeholder = "Employee Id" } })
                <div class="text-danger">@ViewBag.employeeIdLengthErrorMessage</div>
                @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Designation, new { htmlAttributes = new { @class = "form-control", placeholder = "Designation" } })
                @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", placeholder = "Address" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Pincode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Pincode, new { htmlAttributes = new { @class = "form-control", placeholder = "Pincode", @type = "number" } })
                @Html.ValidationMessageFor(model => model.Pincode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               
                @Html.PasswordFor(model => model.Password, new { @class = "form-control", placeholder = "Password" })
                <div class="text-danger">@ViewBag.PasswordErrorMessage</div>
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, "Confirm Password", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control", placeholder = "Confirm Password" })
                <div class="text-danger">@ViewBag.PasswordMismatchMessage</div>
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Email" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.UserTypeID, "User Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("userType",null, "--Select--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserTypeID, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add Interviewers" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<form id="InterviewerForm">

    @grid.GetHtml(tableStyle: "table table-bordered table-striped table-condensed",
            headerStyle: "webgrid-header",
            footerStyle: "webgrid-footer",
            alternatingRowStyle: "webgrid-alternating-row",
            selectedRowStyle: "webgrid-selected-row",
            rowStyle: "webgrid-row-style",
            htmlAttributes:new { id="DataTable"},
            mode: WebGridPagerModes.All,

            columns:
            grid.Columns(
                @*grid.Column("UserID", format: @<text>  <span class="display-mode">@item.UserID </span> <label id="lblUserID" class="edit-mode">@item.UserID</label> </text>),*@
                //grid.Column("S.No.", format: item => rowVal = rowVal + 1),
                grid.Column("UserName","User Name", format:
                @<text>
                    <span class="display-mode"> <label id="lblUserName">@item.UserName</label> </span>
                    @*@Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "edit-mode", @Value = @item.UserName } })
                    @Html.ValidationMessageFor(model => model.UserName, string.Empty, new { @class = "edit-mode text-danger" })*@
                    <input type = "text" id = "UserName" name="UserName" value = "@item.UserName" class="edit-mode" />
                    <div><label id="lblUserNameValidation" class="text-danger"></label></div>
                
                </text>),
                
                grid.Column("EmployeeId", "Employee Id", format:
                @<text>
                    <span class="display-mode">@item.EmployeeId </span> <label id="lblEmployeeId" class="edit-mode">@item.EmployeeId</label>
                </text>),

                grid.Column("Email", format:
                @<text>
                    <span class="display-mode"> <label id="lblEmail">@item.Email</label> </span>
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "edit-mode", @Value = @item.Email } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "edit-mode text-danger" })
                    @*<input type="text" id="Email" value="@item.Email" class="edit-mode" />*@
                    <div><label id="lblEmailValidation" class="text-danger"></label> </div>
                </text>),

                grid.Column("Designation", format:
                @<text>
                    <span class="display-mode"> <label id="lblDesignation">@item.Designation</label> </span>
                    <input type="text" id="Designation" value="@item.Designation" class="edit-mode" />
                    <div><label id="lblDesignationValidation" class="text-danger"></label></div>
                </text>),
                grid.Column("Action", format: @<text>
                    <button class="edit-user display-mode btn btn-default" id="@item.UserID">Edit</button>
                    <button class="save-user edit-mode btn btn-default" id="@item.UserID">Save</button>
                    <button class="cancel-user edit-mode btn btn-default" id="@item.UserID">Cancel</button>
                    <button class="delete-user btn btn-default" id="@item.UserID">Delete</button>
                </text>))
                )
</form>
<div>
     
    
    
</div>
<div>
    @Html.ActionLink("Back To Dash Board", "HRHomePage", "HR")
</div>

@Scripts.Render("~/bundles/jqueryval")
