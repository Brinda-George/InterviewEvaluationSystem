@model InterviewEvaluationSystem.Models.UserViewModel

@{
    var grid = new WebGrid(ViewBag.Users, canPage: true, rowsPerPage: 10, canSort: true, ajaxUpdateContainerId: "gridContent", fieldNamePrefix: "f1", pageFieldName: "p1");
    ViewBag.Title = "AddInterviewers";
}

<script src="~/Scripts/Interviewer.js"></script>

<ol class="breadcrumb">
    <li class="breadcrumb-item">
        <a href="~/HR/HRHomePage">Home Page</a>
    </li>
    <li class="breadcrumb-item active">Interviews</li>
    <li class="breadcrumb-item active">Interviewers</li>
</ol>

@if (ViewBag.result != null)
{
    <div class="alert alert-success">
        <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>
        <strong>@ViewBag.result</strong>
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.UserName, "User Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @placeholder = "User Name" } })
                <div class="text-danger">@ViewBag.UserNameErrorMessage</div>
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeId, "Employee ID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmployeeId, new { htmlAttributes = new { @class = "form-control", @placeholder = "Employee Id" } })
                @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Designation, new { htmlAttributes = new { @class = "form-control", @placeholder = "Designation" } })
                @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @placeholder = "Address" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Pincode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Pincode, new { htmlAttributes = new { @class = "form-control", @placeholder = "Pincode", @type = "number" } })
                @Html.ValidationMessageFor(model => model.Pincode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.PasswordFor(model => model.Password, new { @class = "form-control", @placeholder = "Password" })
                <div class="text-danger">@ViewBag.PasswordErrorMessage</div>
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add Interviewers" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div id="gridContent">
    @if (ViewBag.Users.Count != 0)
    {
        @grid.GetHtml(tableStyle: "table table-bordered table-striped table-condensed",
        headerStyle: "webgrid-header",
        footerStyle: "webgrid-footer",
        alternatingRowStyle: "webgrid-alternating-row",
        selectedRowStyle: "webgrid-selected-row",
        rowStyle: "webgrid-row-style",
        mode: WebGridPagerModes.All,
        columns:
        grid.Columns(
            grid.Column("UserName", "User Name", format:
            @<text>
                <span class="display-mode">
                    <label id="lblUserName">@item.UserName</label>
                </span>
                <input type="text" id="UserName" value="@item.UserName" class="edit-mode form-control" />
                <div>
                    <label id="lblUserNameValidation" class="text-danger"></label>
                </div>
            </text>),
            grid.Column("EmployeeId", "Employee ID", format:
            @<text>
                <span class="display-mode">
                    <label id="lblEmployeeId" class="edit-mode">@item.EmployeeId</label>
                </span>
            </text>),
            grid.Column("Email", "Email", format:
            @<text>
                <span class="display-mode">
                    <label id="lblEmail">@item.Email</label>
                </span>
                <input type="text" id="Email" value="@item.Email" class="edit-mode form-control" />
                <div>
                    <label id="lblEmailValidation" class="text-danger"></label>
                </div>
            </text>),
            grid.Column("Designation", "Designation", format:
            @<text>
                <span class="display-mode">
                    <label id="lblDesignation">@item.Designation</label>
                </span>
                <input type="text" id="Designation" value="@item.Designation" class="edit-mode form-control" />
                <div>
                    <label id="lblDesignationValidation" class="text-danger"></label>
                </div>
            </text>),
            grid.Column("Action", format:
            @<text>
                <button class="edit-user display-mode btn btn-default" id="@item.UserID"><i class="fa fa-pencil-square-o" aria-hidden="true"></i> Edit</button>
                <button class="save-user edit-mode btn btn-default" id="@item.UserID"><i class="fa fa-refresh" aria-hidden="true"></i> Update</button>
                <button class="cancel-user edit-mode btn btn-default" id="@item.UserID"><i class="fa fa-times" aria-hidden="true"></i> Cancel</button>
                <button class="delete-user btn btn-default" id="@item.UserID"><i class="fa fa-trash-o" aria-hidden="true"></i> Delete</button>
            </text>))
            )
    }
</div>

<div>
    @Html.ActionLink("Back to Home", "HRHomePage", "HR")
</div>