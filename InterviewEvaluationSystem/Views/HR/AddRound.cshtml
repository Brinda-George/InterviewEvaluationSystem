@model InterviewEvaluationSystem.Models.RoundViewModel

@{
    ViewBag.Title = "RatingScale";

}

<script src="~/Scripts/Around.js"></script>

<ol class="breadcrumb">
    <li class="breadcrumb-item">
        <a href="~/HR/HRHomePage">Home Page</a>
    </li>
    <li class="breadcrumb-item active">Rounds</li>
</ol>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div ID="form1" class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.RoundName, "Round Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RoundName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Round Name" } })
                @Html.ValidationMessageFor(model => model.RoundName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add Round" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div id="ajaxgrid">
    @{
        var gridview = new WebGrid(ViewBag.Rounds, canSort: true, ajaxUpdateContainerId: "ajaxgrid", rowsPerPage: 5);
    }
    @if (ViewBag.Rounds.Count != 0)
    {
        @gridview.GetHtml(tableStyle: "table table-bordered table-striped table-condensed",
                 headerStyle: "webgrid-header",
                 footerStyle: "webgrid-footer",
                 alternatingRowStyle: "webgrid-alternating-row",
                 selectedRowStyle: "webgrid-selected-row",
                 rowStyle: "webgrid-row-style",
                 mode: WebGridPagerModes.All,
                 columns: new[]{
                     gridview.Column("RoundName",format:
                     @<text>
                        <span id="roundname" class="read">@item.RoundName</span>
                        @Html.TextBox("RoundName", (string)item.RoundName, new { @class = "edit",@style="display:none"  })
                        <label class="text-danger" id="roundLbl"></label>
                     </text>),
                     gridview.Column("Action", style: "button",format:
                     @<text>
                        <button class="edit-case read btn btn-default" id="@item.RoundID"><i class="fa fa-pencil-square-o" aria-hidden="true"></i> Edit</button>
                        <button class="delete-case read btn btn-default" id="@item.RoundID"><i class="fa fa-trash-o" aria-hidden="true"></i> Delete</button>
                        <button class="update-case edit btn btn-default" style="display:none" id="@item.RoundID"><i class="fa fa-refresh" aria-hidden="true"></i> Update</button>
                        <button class="cancel-case edit btn btn-default" style="display:none" id="@item.RoundID"><i class="fa fa-times" aria-hidden="true"></i> Cancel</button>
                     </text>)
                 })
    }
</div>

<div>
    @Html.ActionLink("Back to Home", "HRHomePage", "HR")
</div>