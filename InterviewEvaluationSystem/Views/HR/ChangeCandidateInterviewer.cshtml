@{
    ViewBag.Title = "ChangeCandidateInterviewer";
}

<script src="~/Scripts/ChangeCandidateInterviewer.js"></script>

<ol class="breadcrumb">
    <li class="breadcrumb-item">
        <a href="~/HR/HRHomePage">Home Page</a>
    </li>
    <li class="breadcrumb-item">
        <a href="~/HR/Notification">Notifications</a>
    </li>
    <li class="breadcrumb-item active">Change Interviewer</li>
</ol>

@{
    var grid = new WebGrid(ViewBag.CandidateInterviewersList, canPage: true, rowsPerPage: 5, canSort: true);
}

<div id="SearchInterviewer">
    <table>
        <tr>
            <td><input type="text" class="form-control" id="InterviewerNameText" placeholder="Search Interviewer" /></td>
            <td><input type="button" value="Search" class="btn btn-primary searchInterviewer" /></td>
        </tr>
    </table>
</div>
<br />

<div id="gridContentInterviewerResult">
    @if (ViewBag.CandidateInterviewersList.Count != 0)
    {
        @grid.GetHtml(tableStyle: "table table-bordered table-striped table-condensed",
     headerStyle: "webgrid-header",
     footerStyle: "webgrid-footer",
     alternatingRowStyle: "webgrid-alternating-row",
     selectedRowStyle: "webgrid-selected-row",
     rowStyle: "webgrid-row-style",
     mode: WebGridPagerModes.All,
     columns: grid.Columns(
         grid.Column("Name", format:@<text><span><label id="lblCandidateName">@item.Name</label></span></text>),
         grid.Column("Email", format:@<text><span><label id="lblCandidateEmail">@item.Email</label></span></text>),
         grid.Column("RoundID", "Current Round", format:@<text><span><label id="lblCandidateRound">@item.RoundID</label></span></text>),
         grid.Column("UserName", "Assigned Interviewer", format: (item) =>
         {
             if (item.Recommended == null)
             {
                 var link = "<span class='display-modeCandidate'><label id = 'lblInterviewerName' >" + @item.UserName + "</label></span>" +
                            Html.DropDownList("user", null, "", new { id = "ddlInterviewerName", @class = "edit-modeCandidate form-control" });
                 return Html.Raw(link);
             }
             else
             {
                 return Html.Raw(@item.UserName);
             }
         }),
         grid.Column("Action", format: (item) =>
         {
             if (item.Recommended == null)
             {
                 var buttons = "<button class='edit-userCandidate display-modeCandidate btn btn-primary' id='" + @item.CandidateID + "'>Edit</button> " +
                            "<button class='save-userCandidate edit-modeCandidate btn btn-primary' id='" + @item.CandidateID + "'>Save</button> " +
                            "<button class='cancel-userCandidate edit-modeCandidate btn btn-primary' id='" + @item.CandidateID + "'>Cancel</button>";
                 return Html.Raw(buttons);
             }
             else
             {
                 return Html.Raw("Evaluation completed");
             }
         })
         )
         )
    }
    else
    {
        <div class="alert alert-success">
            <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>
            <strong>No Interviews In Progress!!</strong>
        </div>
    }


    @*@< text >
            < span class="display-modeCandidate"> <label id = "lblInterviewerName" > @item.UserName </ label > </ span >
             @Html.DropDownList("user", null, "", new { id = "ddlInterviewerName", @class = "edit-modeCandidate form-control" })
         </ text >),
         grid.Column("Action", format: @<text>

            <button class="edit-userCandidate display-modeCandidate btn btn-primary" id="@item.CandidateID">Edit</button>
            <button class="save-userCandidate edit-modeCandidate btn btn-primary" id="@item.CandidateID">Save</button>
            <button class="cancel-userCandidate edit-modeCandidate btn btn-primary" id="@item.CandidateID">Cancel</button>

        </text>)*@



    @*grid.Column("UserName", "Assigned Interviewer", format: @<text>
            <span class="display-modeCandidate">
                <label id="lblInterviewerName">
                    @item.UserName
                </label>
            </span>
            @Html.DropDownList("user", null, "", new { id = "ddlInterviewerName", @class = "edit-modeCandidate form-control" })
        </text>),
         grid.Column("Action", format: @<text>
            <button class="edit-userCandidate display-modeCandidate btn btn-primary" id="@item.CandidateID">Edit</button>
            <button class="save-userCandidate edit-modeCandidate btn btn-primary" id="@item.CandidateID">Save</button>
            <button class="cancel-userCandidate edit-modeCandidate btn btn-primary" id="@item.CandidateID">Cancel</button>
        </text>)*@




</div>