@model InterviewEvaluationSystem.Models.SkillViewModel

@{
    ViewBag.Title = "Skill";
}

<script src="~/Scripts/Askill.js"></script>

<ol class="breadcrumb">
    <li class="breadcrumb-item">
        <a href="~/HR/HRHomePage">Home Page</a>
    </li>
    <li class="breadcrumb-item active">Skills</li>
</ol>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div ID="form1" class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.SkillCategoryID, "Skill Category", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("category", (IEnumerable<SelectListItem>)ViewBag.category, "Select category",new { @class = "form-control", @id = "categories" })
                <label id="lblCategory" class="text-danger"></label>
                @Html.ValidationMessageFor(model => model.SkillCategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SkillName, "Skill Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SkillName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Skill Name" } })
                @Html.ValidationMessageFor(model => model.SkillName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add Skill" class="btn btn-primary" onclick="return CheckCategory()"/>
            </div>
        </div>
    </div>
}


<div id="ajaxgrid">
    @{
        var gridview = new WebGrid(ViewBag.Skillcategories, canSort: true, ajaxUpdateContainerId: "ajaxgrid", rowsPerPage: 10);
    }

    @gridview.GetHtml(tableStyle: "table table-bordered table-striped table-condensed",
                 headerStyle: "webgrid-header",
                 footerStyle: "webgrid-footer",
                 alternatingRowStyle: "webgrid-alternating-row",
                 selectedRowStyle: "webgrid-selected-row",
                 rowStyle: "webgrid-row-style",
                 mode: WebGridPagerModes.All,
                 columns: new[]{
                    gridview.Column("Skill Category",format:
                    @<text>
                        <span id="skillcategory">@item.skillcat</span>
                    </text>),
                    gridview.Column("Skill Name",format:
                    @<text>
                        <span id="skillname" class="read">@item.skillname</span>
                        @Html.TextBox("SkillName", (string)item.skillname, new { @class = "edit",@style="display:none" })
                    </text>),
                    gridview.Column("Action", style: "button",format:
                    @<text>
                        <button class="edit-case read btn btn-default" id="@item.skillno"><i class="fa fa-pencil-square-o" aria-hidden="true"></i> Edit</button>
                        <button class="delete-case read btn btn-default" id="@item.skillno"><i class="fa fa-trash-o" aria-hidden="true"></i> Delete</button>
                        <button class="update-case edit btn btn-default" style="display:none" id="@item.skillno"><i class="fa fa-refresh" aria-hidden="true"></i> Update</button>
                        <button class="cancel-case edit btn btn-default" style="display:none" id="@item.skillno"><i class="fa fa-times" aria-hidden="true"></i> Cancel</button>
                    </text>)
                })
</div>