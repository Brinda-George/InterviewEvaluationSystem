@model InterviewEvaluationSystem.Models.InterviewEvaluationViewModel
@{
    ViewBag.Title = "Interview Evaluation";
    WebGrid webgridRatingScale = new WebGrid(source: Model.RatingScale, canSort: true, defaultSort: "RateScaleID", ajaxUpdateContainerId: "grid1", fieldNamePrefix: "f1", pageFieldName: "p1");
    List<WebGrid> webgrids = new List<WebGrid>(10);
    for (int i = 0; i < Model.SkillCategories.Count; i++)
    {
        webgrids.Add(new WebGrid(source: Model.SkillsByCategory[i], canPage: true, canSort: true,
            defaultSort: "SkillId", selectionFieldName: "selectedRow", rowsPerPage: 15, ajaxUpdateContainerId: "grid" + i, fieldNamePrefix: "f" + i, pageFieldName: "p" + i));
    }

}
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<link href="~/Content/webgridstyle.css" rel="stylesheet" />
<h2>Interview Evaluation</h2>
<p>Candidate Name: @Session["candidate"].ToString()</p>
<p>Current Round: @Session["round"].ToString()</p>
@using (Html.BeginForm())
{
    <h3>Rating Scale</h3>
    if (Model.RatingScale.Any())
    {
        <div id="grid1">
            @webgridRatingScale.GetHtml(tableStyle: "table table-bordered table-striped table-condensed",
            headerStyle: "webgrid-header",
            footerStyle: "webgrid-footer",
            alternatingRowStyle: "webgrid-alternating-row",
            selectedRowStyle: "webgrid-selected-row",
            rowStyle: "webgrid-row-style",
            mode: WebGridPagerModes.All,
            columns: webgridRatingScale.Columns(
                webgridRatingScale.Column(columnName: "RateScale", header: "RateScale"),
                webgridRatingScale.Column(columnName: "Value", header: "Value"),
                webgridRatingScale.Column(columnName: "Description", header: "Description")
                )
            )
        </div>
    }

    for (int i = 0; i < Model.SkillCategories.Count; i++)
    {
        <h3>@Model.SkillCategories[i].SkillCategory</h3>
        List<WebGridColumn> columns = new List<WebGridColumn>();
        WebGridColumn column = new WebGridColumn();
        column.ColumnName = "SkillName";
        column.Format = (item) => item.GetSelectLink(item.SkillName.ToString());
        columns.Add(column);
        foreach (var round in Model.Rounds)
        {
            columns.Add(new WebGridColumn() { ColumnName = round.RoundName, Header = round.RoundName ,Format = item => Html.DropDownListFor(m=>m.RatingScale[i].RateScaleID, new SelectList(Model.RatingScale, "RateScaleID", "Value"), "--Select--", new { @id = "id"+ round.RoundID.ToString()}) });
        }
        <div id="grid">
            @webgrids[i].GetHtml(tableStyle: "table table-bordered table-striped table-condensed",
            headerStyle: "webgrid-header",
            footerStyle: "webgrid-footer",
            alternatingRowStyle: "webgrid-alternating-row",
            selectedRowStyle: "webgrid-selected-row",
            rowStyle: "webgrid-row-style",
            mode: WebGridPagerModes.All,
            columns: columns
            )
        </div>
        if (webgrids[i].HasSelection)
        {
            <h3>Selected row</h3>
            var skill = (InterviewEvaluationSystem.Models.SkillViewModel)webgrids[i].Rows[webgrids[i].SelectedIndex].Value;
            <p>Skill ID: @skill.SkillID</p>
                <p>Skill Name: @skill.SkillName</p>
        }
    }
        <input type="submit" value="Submit" class="btn btn-default" />
}
<script type="text/javascript">
    function AddBus() {
        var rate = $("#RateScale").val();
        $.ajax({
            url: '/Interviewer/InterviewEvaluation',
            type: 'post',
            data: { rate: rate },
            success: function (data) {
                //$("#divAddBus").html(data);
                alert("sucess");
            },
            error: function () {
                alert("failed");
            }
        });
    }
</script>